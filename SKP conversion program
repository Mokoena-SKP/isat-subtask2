include <iostream>
//Mokoena SKP 9503215085089
using namespace std;

// First function - turning regular numbers into binary
// This one took me a while to figure out but basically you keep dividing by 2
string decimalToBinary(int number) {
    // If it's zero just return zero - learned this the hard way
    if (number == 0) {
        return "0";
    }
    
    string result = "";
    
    // Keep going until number becomes zero
    while (number > 0) {
        int leftover = number % 2;  // Get what's left when divided by 2
        if (leftover == 0) {
            result = "0" + result;  // Put 0 at the front
        } else {
            result = "1" + result;  // Put 1 at the front
        }
        number = number / 2;  // Make number smaller
    }
    
    return result;
}
// Second function - turning binary back to regular numbers  
// Had to think backwards from the first function
int binaryToDecimal(string binary) {
    int result = 0;
    int powerOfTwo = 1;  // Starts at 1, then 2, then 4, then 8...
    
    // Go backwards through the binary string
    for (int i = binary.length() - 1; i >= 0; i--) {
        if (binary[i] == '1') {
            result = result + powerOfTwo;  // Add the power if it's a 1
        }
        powerOfTwo = powerOfTwo * 2;  // Double for next position
    }
    
    return result;
}
// Third function - decimal to hex is trickier because of letters
// Took me some tries to get the A B C D E F part right
string decimalToHexadecimal(int number) {
    if (number == 0) {
        return "0";
    }
    
    string result = "";
    
    while (number > 0) {
        int leftover = number % 16;  // Divide by 16 this time
        
        if (leftover < 10) {
            // For 0-9 just turn into character
            char digit = '0' + leftover;
            result = digit + result;
        } else {
            // For 10,11,12,13,14,15 use A,B,C,D,E,F
            char letter = 'A' + (leftover - 10);
            result = letter + result;
        }
        
        number = number / 16;
    }
    
    return result;
}
